schemaRegistryUrl.display=Schema registry url
schemaRegistryUrl.help=URL of schema registry to which this client connects to. For ex: http://localhost:9090/api/v1
pathToMorePropertiesForSchemaRegistry.display=Schema registry client properties
pathToMorePropertiesForSchemaRegistry.help=Path to file with next configuration properties for Schema Registry client
schemaRegistrySslProtocol.display=Schema registry ssl protocol
schemaRegistrySslProtocol.help=SSL protocol for schema registry

ssoUrlRenewal.display=Sso url
ssoUrlRenewal.help=Url of SSO service for Certificate renewal service
serviceUrlRenewal.display=Certificate service url
serviceUrlRenewal.help=Url for Certificate renewal service
usernameRenewal.display=Username for cert renewal
usernameRenewal.help=Username for authentication to SSO service
passwordRenewal.display=Password for cert renewal
passwordRenewal.help=Password for authentication to SSO service
clientIdRenewal.display=Client id for cert renewal
clientIdRenewal.help=Client id for authentication to SSO service
intervalForCertificateRenewal.display=Interval for certificate renewal
intervalForCertificateRenewal.help=Interval in minutes, which define how long before expiration of certificate, it will be renewal. It doesn't have default value, so compare only actual time with expiration time.
sslPrivateKeyEntryAlias.display=Alias for primary key in keystore
sslPrivateKeyEntryPassword.display=Password for primary key in keystore
sslTrustCertificateAliasPrefix.display=Alias prefix for certificate in truststore
sslTrustCertificateAliasPrefix.help=With this prefix have to start every alias of certificate, which should be renewal. Sufix is number started from 0. For example prefix is 'caroot', so aliases have to be 'caroot0', 'caroot1', 'caroot2'... If one number will be miss next will not be processed.

useOfConnector.display=Use of connector
useOfConnector.help=Kafka connector can be use as Consumer(CONSUMER), Producer(PRODUCER) or both Consumer and Producer(CONSUMER_AND_PRODUCER). Consumer can read data from Kafka server and Producer can write data to Kafka server.
uniqueAttribute.display=Unique attribute
uniqueAttribute.help=Name of unique attribute in avro schema
nameAttribute.display=Name attribute
nameAttribute.help=Name attribute for account in a resource. In most cases, it is equal to unique attribute, but there can be differences.
passwordAttribute.display=Password attribute
passwordAttribute.help=Password attribute for account in a resource.
bootstrapServers.display=Bootstrap servers
bootstrapServers.help=Bootstrap servers property is a comma-separated list of host and port pairs that are the addresses of the Kafka brokers
nameOfSchema.display=Name of schema
nameOfSchema.help=Name of used avro schema. When this connector is only Consumer this schema will get from Schema Registry server. But when connector is Producer, then schema will get from file and will push to Schema Registry server.
kafkaSecurityProtocol.display=Security protocol for Kafka Server
sslKeyStoreType.display=Ssl key store type
sslKeyStoreType.help=Ssl key store type used for Kafka Server and Schema Registry server.
sslKeyStorePath.display=Ssl key store path
sslKeyStorePath.help=Ssl key store path used for Kafka Server and Schema Registry server.
sslKeyStorePassword.display=Ssl key store password
sslKeyStorePassword.help=Ssl key store password used for Kafka Server and Schema Registry server.
sslKeyStoreProvider.display=Ssl key store provider
sslKeyStoreProvider.help=Ssl key store provider used for Kafka Server and Schema Registry server.
sslKeyPassword.display=Ssl key password
sslKeyPassword.help=Ssl key password used for Kafka Server and Schema Registry server.
sslKeyManagerFactoryProvider.display=Ssl key manager factory provider
sslKeyManagerFactoryProvider.help=Ssl key manager factory provider used for Kafka Server and Schema Registry server.
sslKeyManagerFactoryAlgorithm.display=Ssl key manager factory algorithm
sslKeyManagerFactoryAlgorithm.help=Ssl key manager factory algorithm used for Kafka Server and Schema Registry server.
sslTrustStoreType.display=Ssl trust store type
sslTrustStoreType.help=Ssl trust store type used for Kafka Server and Schema Registry server.
sslTrustStorePath.display=Ssl trust store path
sslTrustStorePath.help=Ssl trust store path used for Kafka Server and Schema Registry server.
sslTrustStorePassword.display=Ssl trust store password
sslTrustStorePassword.help=Ssl trust store password used for Kafka Server and Schema Registry server.
sslTrustStoreProvider.display=Ssl trust store provider
sslTrustStoreProvider.help=Ssl trust store provider used for Kafka Server and Schema Registry server.
sslTrustManagerFactoryProvider.display=Ssl trust manager factory provider
sslTrustManagerFactoryProvider.help=Ssl trust manager factory provider used for Kafka Server and Schema Registry server.
sslTrustManagerFactoryAlgorithm.display=Ssl trust manager factory algorithm
sslTrustManagerFactoryAlgorithm.help=Ssl trust manager factory algorithm used for Kafka Server and Schema Registry server.

consumerNameOfTopic.display=Consumer name of topic
consumerNameOfTopic.help=Name of the topic, from which the connector will read.
consumerVersionOfSchema.display=Consumer version of schema
consumerVersionOfSchema.help=Version of avro schema, which connector use. If connector is Producer this property will be automatically updated.
consumerGroupId.display=Consumer group id
consumerGroupId.help=A unique string that identifies the consumer group this consumer belongs to.
consumerPartitionOfTopic.display=Consumer partition(s) of topic
consumerPartitionOfTopic.help=List partitions of topic, from which the connector will read. List is a comma-separated, for example '1,2,3,5-7'. Default value is 0.
consumerDurationIfFail.display=Consumer duration if fail
consumerDurationIfFail.help=The time, in minutes, spent waiting in poll if data is not available in the buffer. Default value is 2.
consumerMaxRecords.display=Consumer max records
consumerMaxRecords.help=The maximum number of records returned in a single call.
pathToMorePropertiesForConsumer.display=Consumer more properties file
pathToMorePropertiesForConsumer.help=Path to file with next configuration properties for Consumer.

producerPathToFileContainingSchema.display=Producer path to file containing schema
producerPathToFileContainingSchema.help=Path to the file, which contains avro schema.
producerNameOfTopic.display=Producer name of topic
producerNameOfTopic.help=Name of the topic, from which the connector will write.
pathToMorePropertiesForProducer.display=Producer more properties file
pathToMorePropertiesForProducer.help=Path to file with next configuration properties for Producer.
